<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Just Do it on Just Do it</title>
    <link>https://sunwenli.github.io/</link>
    <description>Recent content in Just Do it on Just Do it</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2020 Wenli Sun</copyright>
    <lastBuildDate>Tue, 26 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mac app integration and call zipalign, Throw An Error dyld: Library not loaded: @rpath/libc&#43;&#43;.dylib</title>
      <link>https://sunwenli.github.io/post/2019-0925/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0925/</guid>
      <description>&lt;p&gt;Recently Packtool(an App create by electron) added autoupdate feature ，The premise is
You have to sign your app。&lt;/p&gt;

&lt;p&gt;There was something wrong with the android group today😂。&lt;/p&gt;

&lt;p&gt;The problem was caused by using zipalign(a tool for optimizing the apk) which integration in Packtool optimized the apk.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error:

dyld: Library not loaded: @rpath/libc++.dylib
  Referenced from: myAppName.app/Contents/Resources/tool/mac/zipalign
  Reason: image not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obviously, these log was printed by zipalign could not found libc++.dylib.&lt;/p&gt;

&lt;p&gt;The reason is &lt;code&gt;@rpath&lt;/code&gt;, for explaining of &lt;code&gt;@rpath&lt;/code&gt; maybe &lt;a href=&#34;http://www.tanhao.me/pieces/1361.html/&#34; target=&#34;_blank&#34;&gt;this blog&lt;/a&gt; helpful.&lt;/p&gt;

&lt;p&gt;In short,&lt;code&gt;@rpath&lt;/code&gt; like a shell variable. zipalign will get the value of &lt;code&gt;@rpath&lt;/code&gt; at runtime then join the &lt;code&gt;/libc++.dylib&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In fact, at this,  &lt;code&gt;@rpath&lt;/code&gt;’value should be &lt;code&gt;/usr/lib&lt;/code&gt;, So why couldn&amp;rsquo;t zipalign find the library. Finde answer in &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/Security/Conceptual/CodeSigningGuide/Procedures/Procedures.html#//apple_ref/doc/uid/TP40005929-CH4-SW19&#34; target=&#34;_blank&#34;&gt;this blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow these steps to solve:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;open Terminal.app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;install_name_tool -change @rpath/libc++.dylib /usr/lib/libc++.dylib myAppName.app/Contents/Resources/tool/mac/zipalign&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The simple instructions of &lt;code&gt;install_name_tool&lt;/code&gt;：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;what params &lt;code&gt;install_name_tool&lt;/code&gt; support？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;install_name_tool -h
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Usage: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/install_name_tool
 [-change old new] ... [-rpath old new] ... [-add_rpath new] ... [-delete_rpath old] ... [-id name] input
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;modify dynamic lib’s path&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;install_name_tool -change &amp;lt;app&#39;@rpath value&amp;gt; &amp;lt;real value of dynamic lib&amp;gt; &amp;lt;app’s path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Refer to the link&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/bfa05ef3c482&#34; target=&#34;_blank&#34;&gt;MAC：@rpath的坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tanhao.me/pieces/1361.html/&#34; target=&#34;_blank&#34;&gt;Xcode Build Settings中的变量@rpath,@loader_path,@executable_path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/minger1202/article/details/71319308&#34; target=&#34;_blank&#34;&gt;install_name_tool解决dyld: Library not loaded&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>rebirth</title>
      <link>https://sunwenli.github.io/post/2019-0907/</link>
      <pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0907/</guid>
      <description>&lt;p&gt;The company was bought by the public company, but the public company had some problems, so the company leader decided to separate from the public company.&lt;/p&gt;

&lt;p&gt;The leader has created a new company and decided to start next week. Our department and the operation and maintenance department will sign the resignation with the current company first, and then sign the new company.&lt;/p&gt;

&lt;p&gt;bu ming jue li.&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>A letter to youyou luling</title>
      <link>https://sunwenli.github.io/post/2019-0708/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0708/</guid>
      <description>&lt;p&gt;I was going to publish the original , but then i thought about it , the content was just too real and moving for me to put it out here. so forget it.&lt;/p&gt;

&lt;p&gt;Pretend there is text here.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Dear Mr. Deer
	...

	...

	Borrow your motto: 日拱一卒，只为苍生说人话
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Share with you.&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>bug of beego unit test </title>
      <link>https://sunwenli.github.io/post/2019-0627/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0627/</guid>
      <description>&lt;p&gt;During write unit test with beego , source code contains &lt;code&gt;beego.AppConfig.GetSection()&lt;/code&gt; appear the bug .&lt;/p&gt;

&lt;p&gt;I can not right get the config. code in project like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cfgs, err := beego.AppConfig.GetSection(&amp;quot;test_conf&amp;quot;)
if err != nil {
	panic(err)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;panic outputs: &lt;code&gt;not implement in the fakeConfigContainer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;beego&amp;rsquo;s author reply in github that is a bug and already fixed in new version, but i got this problem still now with version &lt;code&gt;1.11.1&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Many guys have the same problem , when I search solutions in github.&lt;/p&gt;

&lt;p&gt;I find a solution not the best.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;add this code to init method above &lt;code&gt;beego.AppConfig.GetSection()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;err := beego.LoadAppConfig(&amp;quot;ini&amp;quot;, &amp;quot;../conf/app.conf&amp;quot;)
if err != nil {
	panic(err)
}

cfgs, err := beego.AppConfig.GetSection(&amp;quot;test_conf&amp;quot;)
if err != nil {
	panic(err)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/astaxie/beego/issues/2773&#34; target=&#34;_blank&#34;&gt;refer Issues of github&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Silly force</title>
      <link>https://sunwenli.github.io/post/2019-0609/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0609/</guid>
      <description>&lt;p&gt;I am a fucking Silly force .&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>How to let QWebengineView call React function</title>
      <link>https://sunwenli.github.io/post/2019-0515/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0515/</guid>
      <description>&lt;p&gt;QWebengineView of Qt(golang)  use &lt;code&gt;RunJavaScript4&lt;/code&gt; can not call React function successfully !&lt;/p&gt;

&lt;p&gt;I solved this problem flow steps below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;in js file, we should export React Class instance to window.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;  import xxx;
  //...
  window.updateValue = function(url) {
  	alert(&amp;quot;call ok !&amp;quot;);
    // if(window.callback != undefined) {
    //    window.callback.updateValue(url);
    // }
  };
  window.setCallback = function(callback) {
    window.callback = callback;
  }
  //...
  export default class MyFeedback extends React.Component {
   //...
   // key step
   //  in react life cycle `componentWillMount` set `this` :
   componentWillMount() {
         window.setCallback(this);
   }
  //...
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;in go file, we call function like this :&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;	ap.WebView.Page().RunJavaScript4(&amp;quot;window.updateValue(&#39;hello&#39;)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;after run project . i see alert &lt;code&gt;call ok!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Refer to the link : &lt;a href=&#34;https://blog.csdn.net/ZHOUYONGXYZ/article/details/82760929&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/ZHOUYONGXYZ/article/details/82760929&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>Qt使用QWebengineView导致花屏和黑屏现象</title>
      <link>https://sunwenli.github.io/post/2019-0424/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2019-0424/</guid>
      <description>&lt;p&gt;Qt使用QWebengineView导致花屏和黑屏现象&lt;/p&gt;

&lt;p&gt;最近在搞 Ant Design 的二次开发，需要迁移一个界面到 Qt(golang) 开发的 Mac 版的桌面程序里。桌面程序加载了一个 QWebengine 创建的 webview, webview 然后去 load 一个 url , 到这里一切还正常。&lt;/p&gt;

&lt;p&gt;每次点击界面里的按钮去和后端进行交互成功后，界面带着后端返回的数据进行重新渲染都会出现组件背景色变黑 （花屏和黑屏现象）。&lt;/p&gt;

&lt;p&gt;原因是有些旧机器支持的 OpenGL 驱动版本太低，所以需要使用 SoftwareOpenGL 。&lt;/p&gt;

&lt;p&gt;伪代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;qApplication := widgets.NewQApplication(len(os.Args), os.Args)
qApplication.SetAttribute(core.Qt__AA_UseSoftwareOpenGL, true)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加以上代码可以解决问题。&lt;/p&gt;

&lt;p&gt;原文 &lt;a href=&#34;https://blog.csdn.net/Chaosty414/article/details/77885490&#34; target=&#34;_blank&#34;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>iOS马甲包如何避免苹果审核4.3打回</title>
      <link>https://sunwenli.github.io/post/2018_0510/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2018_0510/</guid>
      <description>&lt;p&gt;iOS马甲包如何避免苹果审核4.3打回&lt;/p&gt;

&lt;h3 id=&#34;ios马甲包如何避免苹果审核4-3打回&#34;&gt;iOS马甲包如何避免苹果审核4.3打回&lt;/h3&gt;

&lt;h4 id=&#34;什么是4-3-为什么打回&#34;&gt;什么是4.3，为什么打回&lt;/h4&gt;

&lt;p&gt;开发者提交审核的APP被苹果审核为重复应用（苹果开发指南4.3条款），不允许上架，严重者会被封开发者账号。&lt;/p&gt;

&lt;h4 id=&#34;苹果审核机制&#34;&gt;苹果审核机制&lt;/h4&gt;

&lt;p&gt;iOS包提交给苹果审核后，苹果那边会有 &lt;strong&gt;机审&lt;/strong&gt; 和 &lt;strong&gt;人工审核&lt;/strong&gt; 两种方式。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;机审

&lt;ul&gt;
&lt;li&gt;主要审核下包体力的二进制文件，这个过程中如果发现包体二进制相似度过高，回直接被4.3打回，不会进入人工审核流程。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人工审核

&lt;ul&gt;
&lt;li&gt;走到这个流程是通过了机审，此时审核人员会用提审时开发者提供的游戏账号登录进游戏进行试玩，如果审核人员发现登录界面，游戏场景，美术UI相似度过高，仍然有可能会被4.3打回。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;如何避免4-3&#34;&gt;如何避免4.3&lt;/h4&gt;

&lt;p&gt;方法有三，同时使用效果更佳：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;##### 使用不同的电脑+IP，出证书，打包&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;通过和苹果内部人员沟通了解到公司的IP已经被苹果列入重点审核名单，使用公司网络出的证书+打包都很容易被苹果审核为重复应用4.3打回。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;应对策略就是使用 4G网络出证书，打包设备也连接4G网络。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;##### 垃圾代码&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;关于垃圾代码有一个量的把握，一个包应该加多少垃圾代码，之前调研的数量是总代码量的30%。对于客户端APP类游戏我们提供的是200个类，微端类APP游戏我们提供40个类。通过最近提审的情况看，这个量还不够，需要各扩大一倍，客户端类游戏提供400个类，微端类提供80个类。（ps. 某合作方提供的类401个）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;##### 游戏资源（场景+美术）&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;对于游戏资源和垃圾代码类似，某合作方的做法是加入了 600 张图片作为垃圾图片资源（其实就是后缀为png的文件，打不开的）。每次都把图片的hash值改掉，这样就可以达到每次都是不重复的图片资源的效果。修改hash可以借鉴他们提供的一个工具，Windows版的。&lt;/p&gt;

&lt;p&gt;游戏界面和场景尽量修改（可能不用易）&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Energize、Breakthrough</title>
      <link>https://sunwenli.github.io/post/2018_fighting/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/2018_fighting/</guid>
      <description>&lt;p&gt;The main aim of the year 2018 is to Energize、Breakthrough. 😄.&lt;/p&gt;

&lt;h4 id=&#34;2018-赋能-突破&#34;&gt;2018 赋能、突破&lt;/h4&gt;

&lt;p&gt;只有努力才能使自己不被淘汰！&lt;/p&gt;

&lt;p&gt;共勉。&lt;/p&gt;

&lt;p&gt;加油，2018！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Php_best_practice_three</title>
      <link>https://sunwenli.github.io/post/php_best_practice_three/</link>
      <pubDate>Tue, 12 Dec 2017 16:22:18 +0800</pubDate>
      
      <guid>https://sunwenli.github.io/post/php_best_practice_three/</guid>
      <description>&lt;p&gt;This article is mainly talk about Email Class of CoderIgniter ,these days study CI during happiness and peniful. 😄.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>macOS PHP best practice (two)</title>
      <link>https://sunwenli.github.io/post/php_best_practice_two/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/php_best_practice_two/</guid>
      <description>&lt;p&gt;This article is mine recent days work summary. 😄.&lt;/p&gt;

&lt;p&gt;距离上一次写博客有2个月了，与其说博客，倒可以把这看作一周的工作的总结 😂。闲言少叙，开工。&lt;/p&gt;

&lt;h5 id=&#34;前期准备&#34;&gt;前期准备&lt;/h5&gt;

&lt;p&gt;​   首先，在过去一个周，先是着手制定了一份 **2017~2018年度目标计划 **，最近想学的技术及为自己未来找个定位然后列出一个季度的任务(12月~2月) 。&lt;/p&gt;

&lt;h5 id=&#34;着手实现&#34;&gt;着手实现&lt;/h5&gt;

&lt;p&gt;这周主要是在了解 &lt;code&gt;PHP&lt;/code&gt; 的一个常用的框架 &lt;a href=&#34;https://codeigniter.com/&#34; target=&#34;_blank&#34;&gt;CodeIgniter&lt;/a&gt; , 单位的项目也是基于它开发的，所以学习起来可以参考这单位的项目，这样对比这学习感觉更有效果。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从官网下载 &lt;code&gt;CI&lt;/code&gt; 源码然后开启本地的 &lt;code&gt;web&lt;/code&gt; 服务器 Apache。这期间又了解了下 &lt;code&gt;Apache&lt;/code&gt; 的配置及使用。&lt;/li&gt;
&lt;li&gt;学习资源和开发环境搭建都OK之后，进行 &lt;code&gt;CI&lt;/code&gt; 的学习。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;目标计划内也包括了书籍的阅读，所以 &lt;a href=&#34;https://baike.baidu.com/item/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0/2792808?fr=aladdin&#34; target=&#34;_blank&#34;&gt;《刻意练习》&lt;/a&gt;这本书在每天上下班的路上也在阅读中（ps.  &lt;a href=&#34;https://weread.qq.com/&#34; target=&#34;_blank&#34;&gt;微信读书App&lt;/a&gt; 用着不错）。&lt;/p&gt;

&lt;h5 id=&#34;实现进度&#34;&gt;实现进度&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;CI&lt;/code&gt; 模型部分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0/2792808?fr=aladdin&#34; target=&#34;_blank&#34;&gt;《刻意练习》&lt;/a&gt;阅读完成（300/1053）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一次写东西，写的乱七八糟的。😂😂😂&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>macOS PHP best practice (one)</title>
      <link>https://sunwenli.github.io/post/php_best_practice_one/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/php_best_practice_one/</guid>
      <description>&lt;p&gt;This article show us how to use mac own local web sever apache to build our own static website. ​😄​.&lt;/p&gt;

&lt;h4 id=&#34;macos-php-best-practice-one&#34;&gt;macOS PHP best practice (one)&lt;/h4&gt;

&lt;p&gt;最简单直接的方式还是使用 Mac 上自带的 Apache 和 PHP。&lt;/p&gt;

&lt;h5 id=&#34;启动-apache&#34;&gt;启动 Apache&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;启动:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;   apache $sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动后，在浏览器中输入&lt;code&gt;localhost&lt;/code&gt; ，可以看到页面上显示&lt;code&gt;It works！&lt;/code&gt;。(&lt;code&gt;/Library/WebServer/Documents/&lt;/code&gt;下的&lt;code&gt;index.html.en&lt;/code&gt;文件)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Apache&lt;/code&gt; 的默认根目录是 &lt;code&gt;/Library/WebServer/Documents/&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&#34;添加apache对php的支持&#34;&gt;添加apache对php的支持&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;打开 &lt;code&gt;http.conf&lt;/code&gt; 配置文件:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;    sudo vim /etc/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;找到以下代码 &lt;code&gt;LoadModule php5_module libexec/apache2/ libphp5.so&lt;/code&gt; 并去掉注释（去掉前面的==#==号）, &lt;code&gt;wq&lt;/code&gt; 保存退出。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&#34;重启-apache-进行php类型文件的调试&#34;&gt;重启 Apache,进行php类型文件的调试&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;重启:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;   sudo apachectl restart
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;Apache&lt;/code&gt; 的根目录 &lt;code&gt;/Library/WebServer/Documents/&lt;/code&gt; 下新建&lt;code&gt;project&lt;/code&gt;文件夹并写一个&lt;code&gt;php&lt;/code&gt;文件输出&lt;code&gt;hello world&lt;/code&gt;。此时，在浏览器打开 &lt;a href=&#34;http://localhost/project/test.php&#34; target=&#34;_blank&#34;&gt;http://localhost/project/test.php&lt;/a&gt; 就可以正常看到&lt;code&gt;hello world&lt;/code&gt;了~&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果有权限问题,使用下列命令：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;   sudo chown yourname:staff project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中 &lt;code&gt;yourname&lt;/code&gt; 是你自己的名字。&lt;/p&gt;

&lt;h5 id=&#34;使用homebrew安装mysql&#34;&gt;使用homebrew安装mysql&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;安装homebrew&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;安装mysql&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;brew install mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;启动mysql&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;mysql.server start
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;apache-常用命令&#34;&gt;Apache 常用命令&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;启动 Apache 服务&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;重新启动 Apache 服务&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;sudo apachectl restart
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;关闭 Apache 服务&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;sudo apachectl stop
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;查看 Apache 版本&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;httpd -v
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>https://sunwenli.github.io/project/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/project/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>https://sunwenli.github.io/project/example-external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/project/example-external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Getting sssssstarted with the Academic framework for Hugo</title>
      <link>https://sunwenli.github.io/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 12:00:00 +0000</pubDate>
      
      <guid>https://sunwenli.github.io/post/getting-started/</guid>
      <description>

&lt;p&gt;The Academic framework enables you to easily create a beautifully simple personal or academic website using the &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; static site generator.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage your homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Configurable widgets available for Biography, Publications, Projects, News/Blog, Talks, and Contact&lt;/li&gt;
&lt;li&gt;Need a different section? Just use the Custom widget!&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sunwenli.github.io/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/#installing-hugo&#34; target=&#34;_blank&#34;&gt;Install Hugo&lt;/a&gt; and create a new website by typing the following commands in your &lt;em&gt;Terminal&lt;/em&gt; or &lt;em&gt;Command Prompt&lt;/em&gt; app:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site my_website
cd my_website
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install Academic with &lt;a href=&#34;https://help.github.com/articles/set-up-git/&#34; target=&#34;_blank&#34;&gt;git&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/gcushen/hugo-academic.git themes/academic
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or alternatively, &lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;download Academic&lt;/a&gt; and extract it into a &lt;code&gt;themes/academic&lt;/code&gt; folder within your Hugo website.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you are creating a new website, copy the contents of the &lt;code&gt;exampleSite&lt;/code&gt; folder to your website root folder, overwriting existing files if necessary. The &lt;code&gt;exampleSite&lt;/code&gt; folder contains an example config file and content to help you get started.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -av themes/academic/exampleSite/* .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start the Hugo server from your website root folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can go to &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website should appear.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Customize your website - refer to the &lt;em&gt;Getting Started&lt;/em&gt; section below&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt;. Or alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as your university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;Assuming you created a new website with the example content following the installation steps above, this section explores just a few more steps in order to customize it.&lt;/p&gt;

&lt;h3 id=&#34;core-parameters&#34;&gt;Core parameters&lt;/h3&gt;

&lt;p&gt;The core parameters for the website can be edited in the &lt;code&gt;config.toml&lt;/code&gt; configuration file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;baseurl&lt;/code&gt; to your website URL (we recommend &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt; for free hosting)&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;title&lt;/code&gt; to your desired website title such as your name&lt;/li&gt;
&lt;li&gt;The example Disqus commenting variable should be cleared (e.g. &lt;code&gt;disqusShortname = &amp;quot;&amp;quot;&lt;/code&gt;) or set to your own &lt;a href=&#34;https://disqus.com/&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; shortname to enable commenting&lt;/li&gt;
&lt;li&gt;Edit your details under &lt;code&gt;[params]&lt;/code&gt;; these will be displayed mainly in the homepage &lt;em&gt;about&lt;/em&gt; and &lt;em&gt;contact&lt;/em&gt; widgets (if used). To disable a contact field, simply clear the value to &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Place a square cropped portrait photo named &lt;code&gt;portrait.jpg&lt;/code&gt; into the &lt;code&gt;static/img/&lt;/code&gt; folder, overwriting any defaults. Alternatively, you can edit the &lt;code&gt;avatar&lt;/code&gt; filepath to point to a different image name or clear the value to disable the avatar feature.&lt;/li&gt;
&lt;li&gt;To enable LaTeX math for your site, set &lt;code&gt;math = true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Social/academic networking links are defined as multiples of &lt;code&gt;[[params.social]]&lt;/code&gt;. They can be created or deleted as necessary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;introduce-yourself&#34;&gt;Introduce yourself&lt;/h3&gt;

&lt;p&gt;Edit your biography in the &lt;em&gt;about&lt;/em&gt; widget &lt;code&gt;content/home/about.md&lt;/code&gt; that you copied across from the &lt;code&gt;themes/academic/exampleSite/&lt;/code&gt; folder. The research interests and qualifications are stored as &lt;code&gt;interests&lt;/code&gt; and &lt;code&gt;education&lt;/code&gt; variables. The academic qualifications are defined as multiples of &lt;code&gt;[[education.courses]]&lt;/code&gt; and can be created or deleted as necessary. It&amp;rsquo;s possible to completely hide the interests and education lists by deleting their respective variables.&lt;/p&gt;

&lt;h3 id=&#34;customize-the-homepage&#34;&gt;Customize the homepage&lt;/h3&gt;

&lt;p&gt;Refer to our guide on using &lt;a href=&#34;https://sunwenli.github.io/post/widgets/&#34; target=&#34;_blank&#34;&gt;widgets&lt;/a&gt; to customize your homepage.&lt;/p&gt;

&lt;h3 id=&#34;add-your-content&#34;&gt;Add your content&lt;/h3&gt;

&lt;p&gt;Refer to our guide on &lt;a href=&#34;https://sunwenli.github.io/post/managing-content/&#34; target=&#34;_blank&#34;&gt;managing content&lt;/a&gt; to create your own publications, blog posts, talks, and projects.&lt;/p&gt;

&lt;h3 id=&#34;remove-unused-widgets-and-pages&#34;&gt;Remove unused widgets and pages&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sunwenli.github.io/post/managing-content/#removing-content&#34; target=&#34;_blank&#34;&gt;How to remove unused widgets and content pages&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;customization-upgrading&#34;&gt;Customization &amp;amp; Upgrading&lt;/h3&gt;

&lt;p&gt;Continue reading below for advanced customization tips and instructions for keeping the framework up-to-date with any improvements that become available.&lt;/p&gt;

&lt;h2 id=&#34;advanced-customization&#34;&gt;Advanced customization&lt;/h2&gt;

&lt;p&gt;It is possible to carry out many customizations without touching any files in &lt;code&gt;themes/academic&lt;/code&gt;, making it easier to upgrade the framework in the future.&lt;/p&gt;

&lt;h3 id=&#34;navigation-menu&#34;&gt;Navigation menu&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;[[menu.main]]&lt;/code&gt; entries towards the bottom of &lt;code&gt;config.toml&lt;/code&gt; define the navigation links at the top of the website. They can be added or removed as desired.&lt;/p&gt;

&lt;p&gt;To create a dropdown sub-menu, add &lt;code&gt;identifier = &amp;quot;something&amp;quot;&lt;/code&gt; to the parent item and &lt;code&gt;parent = &amp;quot;something&amp;quot;&lt;/code&gt; to the child item.&lt;/p&gt;

&lt;h3 id=&#34;website-icon&#34;&gt;Website icon&lt;/h3&gt;

&lt;p&gt;Save your main icon and mobile icon as square PNG images named &lt;code&gt;icon.png&lt;/code&gt; and &lt;code&gt;apple-touch-icon.png&lt;/code&gt;, respectively. Place them in your root &lt;code&gt;static/img/&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3 id=&#34;theme-color-css&#34;&gt;Theme color (CSS)&lt;/h3&gt;

&lt;p&gt;You can link custom CSS assets (relative to your root &lt;code&gt;static/css&lt;/code&gt;) from your &lt;code&gt;config.toml&lt;/code&gt; using &lt;code&gt;custom_css = [&amp;quot;custom.css&amp;quot;]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, lets make a green theme. First, define &lt;code&gt;custom_css = [&amp;quot;green.css&amp;quot;]&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. Then we can download the example &lt;a href=&#34;https://gist.github.com/gcushen/d5525a4506b9ccf83f2bce592a895495&#34; target=&#34;_blank&#34;&gt;green theme&lt;/a&gt; and save it as &lt;code&gt;static/css/green.css&lt;/code&gt;, relative to your website root (i.e. &lt;strong&gt;not&lt;/strong&gt; in the &lt;code&gt;themes&lt;/code&gt; directory).&lt;/p&gt;

&lt;h3 id=&#34;analytics&#34;&gt;Analytics&lt;/h3&gt;

&lt;p&gt;To enable &lt;a href=&#34;http://www.google.com/analytics&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, add your tracking code in &lt;code&gt;config.toml&lt;/code&gt; similarly to &lt;code&gt;googleAnalytics = &amp;quot;UA-12345678-9&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;third-party-and-local-scripts-js&#34;&gt;Third party and local scripts (JS)&lt;/h3&gt;

&lt;p&gt;To add a third party script, create a file named &lt;code&gt;head_custom.html&lt;/code&gt; in a &lt;code&gt;layouts/partials/&lt;/code&gt; folder at the root of your website (not in the &lt;code&gt;themes&lt;/code&gt; folder). Any HTML code added to this file will be included within your website&amp;rsquo;s &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Therefore, it&amp;rsquo;s suitable for adding custom metadata or third party scripts specified with the &lt;em&gt;async&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;Whereas for your own local scripts, you can link your local JS assets (relative to your root &lt;code&gt;static/js&lt;/code&gt;) from your &lt;code&gt;config.toml&lt;/code&gt; using &lt;code&gt;custom_js  = [&amp;quot;custom.js&amp;quot;]&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;language-and-translation&#34;&gt;Language and translation&lt;/h3&gt;

&lt;p&gt;The interface text (e.g. buttons) is stored in language files which are collected from Academic&amp;rsquo;s &lt;code&gt;themes/academic/i18n/&lt;/code&gt; folder, as well as an &lt;code&gt;i18n/&lt;/code&gt; folder at the root of your project.&lt;/p&gt;

&lt;p&gt;To edit the interface text, copy &lt;code&gt;themes/academic/i18n/en.yaml&lt;/code&gt; to &lt;code&gt;i18n/en.yaml&lt;/code&gt; (relative to the root of your website). Open the new file and make any desired changes to the text appearing after &lt;code&gt;translation:&lt;/code&gt;. Note that the language files are formatted in YAML syntax.&lt;/p&gt;

&lt;p&gt;To translate the interface text to another language, follow the above instructions, but name the new file in the form &lt;code&gt;i18n/X.yaml&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; is the appropriate &lt;a href=&#34;http://www.w3schools.com/tags/ref_language_codes.asp&#34; target=&#34;_blank&#34;&gt;ISO/RFC5646 language identifier&lt;/a&gt; for the translation. Then follow the brief instructions in the &lt;em&gt;Language&lt;/em&gt; section at the bottom of your &lt;code&gt;config.toml&lt;/code&gt;. To change the default language used by Academic, set &lt;code&gt;defaultContentLanguage&lt;/code&gt; to the desired language identifier in your configuration file.&lt;/p&gt;

&lt;p&gt;To translate the navigation bar, you can edit the default &lt;code&gt;[[menu.main]]&lt;/code&gt; instances in &lt;code&gt;config.toml&lt;/code&gt;. However, for a multilingual site, you will need to duplicate all of the &lt;code&gt;[[menu.main]]&lt;/code&gt; instances and rename the new instances from &lt;code&gt;[[menu.main]]&lt;/code&gt; to &lt;code&gt;[[languages.X.menu.main]]&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is the language identifier (e.g. &lt;code&gt;[[languages.zh.menu.main]]&lt;/code&gt; for Simplified Chinese). Thus, the navigation bar can be displayed in multiple languages.&lt;/p&gt;

&lt;p&gt;To translate a content file in your &lt;code&gt;content/&lt;/code&gt; folder into another language, copy the file to &lt;code&gt;filename.X.md&lt;/code&gt; where &lt;code&gt;filename&lt;/code&gt; is your existing filename and &lt;code&gt;X&lt;/code&gt; is the appropriate &lt;a href=&#34;http://www.w3schools.com/tags/ref_language_codes.asp&#34; target=&#34;_blank&#34;&gt;ISO/RFC5646 language identifier&lt;/a&gt; for the translation. Then translate the content in the new file to the specified language.&lt;/p&gt;

&lt;p&gt;For further details on Hugo&amp;rsquo;s internationalization and multilingual features, refer to the &lt;a href=&#34;https://gohugo.io/content/multilingual/&#34; target=&#34;_blank&#34;&gt;associated Hugo documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;permalinks&#34;&gt;Permalinks&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Permalinks&lt;/em&gt;, or &lt;em&gt;permanent links&lt;/em&gt;, are URLs to individual pages and posts on your website. They are permanent web addresses which can be used to link to your content. Using Hugo&amp;rsquo;s &lt;em&gt;permalinks&lt;/em&gt; option these can be easily customized. For example, the blog post URL can be changed to the form &lt;em&gt;yourURL/2016/05/01/my-post-slug&lt;/em&gt; by adding the following near the top of your &lt;code&gt;config.toml&lt;/code&gt; (before &lt;code&gt;[params]&lt;/code&gt; settings):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[permalinks]
    post = &amp;quot;/:year/:month/:day/:slug&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;code&gt;:slug&lt;/code&gt; defaults to the filename of the post, excluding the file extension. However, slug may be overridden on a per post basis if desired, simply by setting &lt;code&gt;slug = &amp;quot;my-short-post-title&amp;quot;&lt;/code&gt; in your post preamble.&lt;/p&gt;

&lt;h2 id=&#34;upgrading&#34;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; and monitor the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/commits/master&#34; target=&#34;_blank&#34;&gt;commits&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;Before upgrading the framework, it is recommended to make a backup of your entire website directory, or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory. You can also read about the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/releases&#34; target=&#34;_blank&#34;&gt;most recent milestones&lt;/a&gt; (but this doesn&amp;rsquo;t necessarily reflect the latest &lt;em&gt;master&lt;/em&gt; release).&lt;/p&gt;

&lt;p&gt;Before upgrading for the first time, the remote &lt;em&gt;origin&lt;/em&gt; repository should be renamed to &lt;em&gt;upstream&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes/academic
$ git remote rename origin upstream
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To list available updates:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes/academic
$ git fetch upstream
$ git log --pretty=oneline --abbrev-commit --decorate HEAD..upstream/master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, upgrade by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git pull upstream
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have modified files in &lt;code&gt;themes/academic&lt;/code&gt;, git will attempt to auto-merge changes. If conflicts are reported, you will need to manually edit the files with conflicts and add them back (&lt;code&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If there are any issues after upgrading, you may wish to compare your site with the latest &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;example site&lt;/a&gt; to check if any settings changed.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For general questions about Hugo, there is a &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016 &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
